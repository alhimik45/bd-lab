/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.Assignment;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssignmentRecord extends UpdatableRecordImpl<AssignmentRecord> implements Record5<Long, Long, Long, Long, Date> {

    private static final long serialVersionUID = -1514470775;

    /**
     * Setter for <code>public.Assignment.PostDPS_PK</code>.
     */
    public void setPostdpsPk(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.Assignment.PostDPS_PK</code>.
     */
    public Long getPostdpsPk() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.Assignment.Assignment_PK</code>.
     */
    public void setAssignmentPk(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.Assignment.Assignment_PK</code>.
     */
    public Long getAssignmentPk() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.Assignment.Employe_PK</code>.
     */
    public void setEmployePk(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.Assignment.Employe_PK</code>.
     */
    public Long getEmployePk() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.Assignment.Person_PK</code>.
     */
    public void setPersonPk(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.Assignment.Person_PK</code>.
     */
    public Long getPersonPk() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.Assignment.Date</code>.
     */
    public void setDate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.Assignment.Date</code>.
     */
    public Date getDate() {
        return (Date) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Long, Long, Long, Date> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Long, Long, Long, Date> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Assignment.ASSIGNMENT.POSTDPS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Assignment.ASSIGNMENT.ASSIGNMENT_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Assignment.ASSIGNMENT.EMPLOYE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Assignment.ASSIGNMENT.PERSON_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Assignment.ASSIGNMENT.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getPostdpsPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getAssignmentPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getEmployePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getPersonPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component5() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPostdpsPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getAssignmentPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getEmployePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getPersonPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value1(Long value) {
        setPostdpsPk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value2(Long value) {
        setAssignmentPk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value3(Long value) {
        setEmployePk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value4(Long value) {
        setPersonPk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value5(Date value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord values(Long value1, Long value2, Long value3, Long value4, Date value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssignmentRecord
     */
    public AssignmentRecord() {
        super(Assignment.ASSIGNMENT);
    }

    /**
     * Create a detached, initialised AssignmentRecord
     */
    public AssignmentRecord(Long postdpsPk, Long assignmentPk, Long employePk, Long personPk, Date date) {
        super(Assignment.ASSIGNMENT);

        set(0, postdpsPk);
        set(1, assignmentPk);
        set(2, employePk);
        set(3, personPk);
        set(4, date);
    }
}

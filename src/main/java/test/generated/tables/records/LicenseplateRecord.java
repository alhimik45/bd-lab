/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.Licenseplate;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LicenseplateRecord extends UpdatableRecordImpl<LicenseplateRecord> implements Record4<Long, Long, Long, Long> {

    private static final long serialVersionUID = -489314179;

    /**
     * Setter for <code>public.LicensePlate.LicensePlate_PK</code>.
     */
    public void setLicenseplatePk(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.LicensePlate.LicensePlate_PK</code>.
     */
    public Long getLicenseplatePk() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.LicensePlate.Region_PK</code>.
     */
    public void setRegionPk(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.LicensePlate.Region_PK</code>.
     */
    public Long getRegionPk() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.LicensePlate.Plate_PK</code>.
     */
    public void setPlatePk(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.LicensePlate.Plate_PK</code>.
     */
    public Long getPlatePk() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.LicensePlate.Vehicle_PK</code>.
     */
    public void setVehiclePk(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.LicensePlate.Vehicle_PK</code>.
     */
    public Long getVehiclePk() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Licenseplate.LICENSEPLATE.LICENSEPLATE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Licenseplate.LICENSEPLATE.REGION_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Licenseplate.LICENSEPLATE.PLATE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Licenseplate.LICENSEPLATE.VEHICLE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getLicenseplatePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getRegionPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getPlatePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getVehiclePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getLicenseplatePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getRegionPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getPlatePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getVehiclePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LicenseplateRecord value1(Long value) {
        setLicenseplatePk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LicenseplateRecord value2(Long value) {
        setRegionPk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LicenseplateRecord value3(Long value) {
        setPlatePk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LicenseplateRecord value4(Long value) {
        setVehiclePk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LicenseplateRecord values(Long value1, Long value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LicenseplateRecord
     */
    public LicenseplateRecord() {
        super(Licenseplate.LICENSEPLATE);
    }

    /**
     * Create a detached, initialised LicenseplateRecord
     */
    public LicenseplateRecord(Long licenseplatePk, Long regionPk, Long platePk, Long vehiclePk) {
        super(Licenseplate.LICENSEPLATE);

        set(0, licenseplatePk);
        set(1, regionPk);
        set(2, platePk);
        set(3, vehiclePk);
    }
}

/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.Drcateg;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DrcategRecord extends UpdatableRecordImpl<DrcategRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1809656571;

    /**
     * Setter for <code>public.DrCateg.DrCateg_PK</code>.
     */
    public void setDrcategPk(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.DrCateg.DrCateg_PK</code>.
     */
    public Long getDrcategPk() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.DrCateg.DriverLicense_PK</code>.
     */
    public void setDriverlicensePk(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.DrCateg.DriverLicense_PK</code>.
     */
    public Long getDriverlicensePk() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.DrCateg.Category_PK</code>.
     */
    public void setCategoryPk(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.DrCateg.Category_PK</code>.
     */
    public Long getCategoryPk() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Drcateg.DRCATEG.DRCATEG_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Drcateg.DRCATEG.DRIVERLICENSE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Drcateg.DRCATEG.CATEGORY_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getDrcategPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getDriverlicensePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getCategoryPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getDrcategPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getDriverlicensePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getCategoryPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DrcategRecord value1(Long value) {
        setDrcategPk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DrcategRecord value2(Long value) {
        setDriverlicensePk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DrcategRecord value3(Long value) {
        setCategoryPk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DrcategRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DrcategRecord
     */
    public DrcategRecord() {
        super(Drcateg.DRCATEG);
    }

    /**
     * Create a detached, initialised DrcategRecord
     */
    public DrcategRecord(Long drcategPk, Long driverlicensePk, Long categoryPk) {
        super(Drcateg.DRCATEG);

        set(0, drcategPk);
        set(1, driverlicensePk);
        set(2, categoryPk);
    }
}

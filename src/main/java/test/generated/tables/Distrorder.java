/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Keys;
import test.generated.Public;
import test.generated.tables.records.DistrorderRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Distrorder extends TableImpl<DistrorderRecord> {

    private static final long serialVersionUID = 1538824802;

    /**
     * The reference instance of <code>public.DistrOrder</code>
     */
    public static final Distrorder DISTRORDER = new Distrorder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DistrorderRecord> getRecordType() {
        return DistrorderRecord.class;
    }

    /**
     * The column <code>public.DistrOrder.DateOrder</code>.
     */
    public final TableField<DistrorderRecord, Date> DATEORDER = createField("DateOrder", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.DistrOrder.DistrOrder_PK</code>.
     */
    public final TableField<DistrorderRecord, Long> DISTRORDER_PK = createField("DistrOrder_PK", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('\"DistrOrder_DistrOrder_PK_seq\"'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.DistrOrder.Employe_PK</code>.
     */
    public final TableField<DistrorderRecord, Long> EMPLOYE_PK = createField("Employe_PK", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.DistrOrder.Person_PK</code>.
     */
    public final TableField<DistrorderRecord, Long> PERSON_PK = createField("Person_PK", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.DistrOrder</code> table reference
     */
    public Distrorder() {
        this(DSL.name("DistrOrder"), null);
    }

    /**
     * Create an aliased <code>public.DistrOrder</code> table reference
     */
    public Distrorder(String alias) {
        this(DSL.name(alias), DISTRORDER);
    }

    /**
     * Create an aliased <code>public.DistrOrder</code> table reference
     */
    public Distrorder(Name alias) {
        this(alias, DISTRORDER);
    }

    private Distrorder(Name alias, Table<DistrorderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Distrorder(Name alias, Table<DistrorderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DistrorderRecord, Long> getIdentity() {
        return Keys.IDENTITY_DISTRORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DistrorderRecord> getPrimaryKey() {
        return Keys.PK_DISTROREDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DistrorderRecord>> getKeys() {
        return Arrays.<UniqueKey<DistrorderRecord>>asList(Keys.PK_DISTROREDER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DistrorderRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DistrorderRecord, ?>>asList(Keys.DISTRORDER__RELATIONSHIP36);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Distrorder as(String alias) {
        return new Distrorder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Distrorder as(Name alias) {
        return new Distrorder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Distrorder rename(String name) {
        return new Distrorder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Distrorder rename(Name name) {
        return new Distrorder(name, null);
    }
}

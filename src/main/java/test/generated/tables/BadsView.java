/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Public;
import test.generated.tables.records.BadsViewRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BadsView extends TableImpl<BadsViewRecord> {

    private static final long serialVersionUID = -350474264;

    /**
     * The reference instance of <code>public.bads_view</code>
     */
    public static final BadsView BADS_VIEW = new BadsView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BadsViewRecord> getRecordType() {
        return BadsViewRecord.class;
    }

    /**
     * The column <code>public.bads_view.ArticleCop</code>.
     */
    public final TableField<BadsViewRecord, String> ARTICLECOP = createField("ArticleCop", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.bads_view.AddressVioalation</code>.
     */
    public final TableField<BadsViewRecord, String> ADDRESSVIOALATION = createField("AddressVioalation", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.bads_view.FIO</code>.
     */
    public final TableField<BadsViewRecord, String> FIO = createField("FIO", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.bads_view.fioi</code>.
     */
    public final TableField<BadsViewRecord, String> FIOI = createField("fioi", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.bads_view.Date</code>.
     */
    public final TableField<BadsViewRecord, Date> DATE = createField("Date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>public.bads_view</code> table reference
     */
    public BadsView() {
        this(DSL.name("bads_view"), null);
    }

    /**
     * Create an aliased <code>public.bads_view</code> table reference
     */
    public BadsView(String alias) {
        this(DSL.name(alias), BADS_VIEW);
    }

    /**
     * Create an aliased <code>public.bads_view</code> table reference
     */
    public BadsView(Name alias) {
        this(alias, BADS_VIEW);
    }

    private BadsView(Name alias, Table<BadsViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private BadsView(Name alias, Table<BadsViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BadsView as(String alias) {
        return new BadsView(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BadsView as(Name alias) {
        return new BadsView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BadsView rename(String name) {
        return new BadsView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BadsView rename(Name name) {
        return new BadsView(name, null);
    }
}
